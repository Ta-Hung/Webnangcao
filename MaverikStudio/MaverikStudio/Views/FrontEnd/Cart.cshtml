
@{
    Layout = "~/Views/Shared/frontend.cshtml";
}

<div class="container">
    <div class="container__path">
        <div class="container__path-warraper grid wide">
            <ul class="row no-gutters">
                <li><a href="#">Trang chủ</a></li>
                <li><a href="#">Giỏ hàng</a></li>
            </ul>
        </div>
    </div>
    <div class="grid wide">
        <div class="row">
            <div class="col l-9 m-12 c-12">
                <div style="padding: 0 10px;">
                    <div style="display: flex; justify-content: center;">
                        <h1 style="font-size: 30px; font-weight: 500;">GIỎ HÀNG CỦA BẠN</h1>
                    </div>
                    <div style="background-color: rgb(250,250,250); font-size: 14px; font-weight: 500; padding: 10px">
                        <div><h4 id="quantityItem" style="margin: 0 0 10px 0;"></h4></div>

                        <div style="background-color: #fff">
                            <div id="list_item_cart" style="padding-top: 14px;padding-bottom: 14px; border-bottom: 1px solid #e1e1e1; font-size: 14px; font-weight: 500;">
                                
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col l-3 m-12 c-12" style="font-size: 14px; font-weight: 500;">
                <div style="position: sticky; top: 30px;">
                    <a href="@Url.Action("SpringSummer", "FrontEnd")" style="display: block; margin-top: 55px; text-align: right; margin-bottom: 5px; text-decoration: none; color: #333; font-weight: 700;">Tiếp tục mua hàng -></a>
                    <div style="border: 1px solid #dfe0e1; padding: 15px; margin-bottom: 15px;">
                        <h2 style="font-size: 17px; font-weight: bold; margin-top: 10px; margin-bottom: 15px;">Thông tin đơn hàng</h2>
                        <div id="pay_total" style="padding-bottom: 15px; border-top: 1px dotted #dfe0e1; padding-top: 15px; font-weight: bold; display: flex; justify-content: space-between;">
                            <span>Tổng tiền: </span>
                            <span>0đ</span>
                        </div>
                        <div style="border-top: 1px dotted #dfe0e1; padding-top: 10px; text-align: center;">
                            <a href="@Url.Action("Pay", "FrontEnd")" class="button-dark" style="display: block; text-decoration: none; text-transform: uppercase; padding: 10px 5px; text-align: center; font-size: 15px; font-weight: bold; border-radius: 0;">Thanh toán</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section css{
    <style>
        .pay__input {
            display: block;
            width: 100%;
            margin-bottom: 10px;
            padding: 13px 13px;
            font-size: 14px;
        }
    </style>
}

@section js{
    <script src="~/assets/frontend/js/container-sidebar.js"></script>
    <script src="~/assets/frontend/js/addcart.js"></script>
    <script>
        HandleSlider('#slider1');
    </script>

    @if (TempData["success"] != null)
    {
        <script>
            alert('@TempData["success"]');

            function deleteCookie(name) {
                document.cookie = name + '=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
            }

            deleteCookie('gioHangCookie');
            showCart();
        </script>
    }

    <script>
        function getCartFromCookie() {
            var gioHangCookieValue = document.cookie.replace(/(?:(?:^|.*;\s*)gioHangCookie\s*\=\s*([^;]*).*$)|^.*$/, "$1");

            // Kiểm tra nếu chuỗi có nghĩa trước khi parse
            if (gioHangCookieValue) {
                try {
                    // Giải mã giá trị cookie từ JSON
                    var gioHang = JSON.parse(decodeURIComponent(gioHangCookieValue));

                    // Nếu giỏ hàng không tồn tại, trả về một mảng rỗng
                    return gioHang || [];
                } catch (error) {
                    console.error("Lỗi khi parse JSON từ cookie:", error);
                }
            }

            // Nếu có lỗi hoặc cookie không tồn tại, trả về một mảng rỗng
            return [];
        }
        let getTotalPay = function () {
            let arrItem = getCartFromCookie();
            if (arrItem.length == 0) {
                $("#list_item_cart").html(`<h3 style="padding-left: 10px;">Giỏ hàng trống<h3>`);
            }
            let quantityItem = 0;
            let payTotal = 0;

            for (item of arrItem) {
                payTotal += item.price * item.quantity;
                quantityItem += parseInt(item.quantity);
            }
            
            $('#pay_total').html('<span>Tổng tiền:</span>' + `<span>${formatCurrency(payTotal)}</span>`);
            $("#quantityItem").text("Bạn đang có " + quantityItem + " sản phẩm trong giỏ hàng");
        }
        let LoadCart = function () {
            let arrItem = getCartFromCookie();
            
            getTotalPay();

            for (item of arrItem) {

                $("#list_item_cart").append(`<div style="display: flex; padding: 10px 0;">
                    <div style="width: 65px; position: relative; padding-left: 10px;">
                        <div style="padding-bottom: 100%; background-image: url('${item.image}'); background-position: center; background-size: cover; border-radius: 8px; box-shadow: 0 0 0 1px rgba(0,0,0,0.1) inset;"></div>
                    </div>
                    <div style="padding: 0 20px; flex: 1; display: flex; justify-content: space-between; align-items: center;">
                        <div>
                            <p style="margin: 0; color: #4b4b4b;">${item.name}</p>
                            <span style="color: #969696; font-size: 12px;">${item.size}</span>
                        </div>
                        <div class="control_cart" style="display: flex; padding: 0 10px;">
                            <button class="tru" style="cursor: pointer; background: #fff; font-weight: 500; font-size: 14px; color: #abafb2; height: 25px; padding: 0; text-align: center; width: 25px; border: 1px solid #dadbdd; border-radius: 0;">-</button>
                            <input readonly class="quantity_value" data-id=${item.id} data-size_id=${item.size_id} data-size=${item.size} data-name=${item.name} data-image=${item.image} data-price=${item.price} data-quantity=${item.quantity} type="text" value="${item.quantity}" style="font-weight: 500; font-size: 15px; height: 25px; padding: 0; text-align: center; width: 35px; background: #ededed; border: 1px solid #dadbdd; border-radius: 0;" />
                            <button class="cong" style="cursor: pointer; background: #fff; font-weight: 500; font-size: 14px; color: #abafb2; height: 25px; padding: 0; text-align: center; width: 25px; border: 1px solid #dadbdd; border-radius: 0;">+</button>
                        </div>
                        <span class="total_money" style="color: #a73340; font-weight: 700; padding: 0 10px;">${formatCurrency(item.price * item.quantity)}</span>
                        <i data-id=${item.id} data-size_id=${item.size_id} class="fa-light fa-trash-can delete_item_cart" style="font-size: 16px; cursor: pointer; padding: 0 10px;"></i>
                    </div>
                </div>`);
            }

            
        }

        LoadCart();

        $(".tru").click(function () {
            let inputQuantity = $(this).siblings(".quantity_value");
            if (inputQuantity.val() > 1) {
                inputQuantity.val(parseInt(inputQuantity.val()) - 1);
                handleCartCookie(inputQuantity.data("id"), inputQuantity.data("size_id"), inputQuantity.val());
                $(this).parent().siblings(".total_money").text(formatCurrency(inputQuantity.val() * inputQuantity.data("price")));
                
            } else {
                inputQuantity.val(1);
                handleCartCookie(inputQuantity.data("id"), inputQuantity.data("size_id"), inputQuantity.val());
                $(this).parent().siblings(".total_money").text(formatCurrency(inputQuantity.val() * inputQuantity.data("price")));
                
            }
            
        });

        $('.cong').click(function () {
            let inputQuantity = $(this).siblings(".quantity_value");
            if (inputQuantity.val() > 0) {
                inputQuantity.val(1 + parseInt(inputQuantity.val()));
                handleCartCookie(inputQuantity.data("id"), inputQuantity.data("size_id"), inputQuantity.val());
                $(this).parent().siblings(".total_money").text(formatCurrency(inputQuantity.val() * inputQuantity.data("price")));
                
            } else {
                inputQuantity.val(1);
                handleCartCookie(inputQuantity.data("id"), inputQuantity.data("size_id"), inputQuantity.val());
                $(this).parent().siblings(".total_money").text(formatCurrency(inputQuantity.val() * inputQuantity.data("price")));
                
            }
            
        })

        $(".delete_item_cart").click(function () {
            removeFromCart($(this).data("id"), $(this).data("size_id"));
            $(this).parent().parent().remove();
            getTotalPay();
            showCart();
        });
    </script>

    <script>
        
        function updateFromCart(id, size_id, quantity) {
            // Lấy giỏ hàng từ cookie
            var gioHang = getCartFromCookie();

            // Tìm và xóa sản phẩm khỏi giỏ hàng dựa trên tên sản phẩm
            gioHang = gioHang.filter(function (item) {
                if (item.id == id && item.size_id == size_id) {
                    item.quantity = quantity;
                }
                return true;
            });

            // Cập nhật thông tin giỏ hàng trong cookie
            setCartToCookie(gioHang);
        }

        
        function handleCartCookie(id, size_id, quantity) {
            $.ajax({
                url: '/FrontEnd/CheckQuantity',
                method: 'GET',
                data: {
                    id: id,
                    size_id: size_id,
                    quantity: quantity
                },
                success: function (data) {
                    if (data.check == "true") {
                        if (quantity > 0) {
                            updateFromCart(id, size_id, quantity);
                            showCart();
                            getTotalPay();
                        }
                    } else {
                        alert("So luong ton kho khong du");
                    }
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }
    </script>
}

